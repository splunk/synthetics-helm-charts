name: Lint and Test

on:
  pull_request:
    branches-ignore:
      - gh-pages
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review # for draft-release.yaml's PR
  push:
    branches: [ main ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up latest stable version of Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config=ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        run: make lint

      - name: Run helm-docs
        id: helm-docs
        run: |
          make docker-docs
          if [[ $(git diff --stat) != '' ]]; then
            echo -e '\033[0;31mChart README is outdated! Please run "make docs".\033[0m ❌'
            git diff --color
            exit 1
          else
            echo -e '\033[0;32mREADME is up-to-date\033[0m ✔'
          fi

      - name: Run helm unit tests
        run: |
          echo "Installing latest version of helm unittest plugin..."
          helm plugin install https://github.com/helm-unittest/helm-unittest >/dev/null 2>/dev/null
          make unittest

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        # Only build a kind cluster if there are chart changes to test.
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install --config=ct.yaml --helm-extra-set-args='--set=synthetics.secret.create=true,synthetics.secret.runnerToken=${{ secrets.RUNNER_TOKEN }}'

      - name: Run chart-testing (upgrade)
        run: ct install --config=ct.yaml --helm-extra-set-args='--set=resources.limits=null,resources.requests=null,synthetics.secret.create=true,synthetics.secret.runnerToken=${{ secrets.RUNNER_TOKEN }}' --upgrade
